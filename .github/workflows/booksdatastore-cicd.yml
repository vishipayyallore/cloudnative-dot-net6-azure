# This is a basic workflow to help you get started with Actions

name: BooksDataStore CICD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # build and create dacpac job
  build_and_create_dacpac:
    # Selecting the windows-latest GitHub-hosted runner
    runs-on: windows-latest

    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2.4.0

      # create dacpac using MSBUILD executable
      - name: create dacpac
        run: |
          & 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\msbuild.exe' BooksDataStore.sqlproj /p:Configuration=Release
        working-directory: ./source/database/BooksDataStore

      # Publish an artifact
      - uses: actions/upload-artifact@v2.2.4
        with:
          name: BooksDataStore
          path: ${{ github.workspace }}/source/database/BooksDataStore/bin/Release/

      - name: Azure SQL Deploy
        uses: Azure/sql-action@v1
        with:
          # Name of the Azure SQL Server name, like Fabrikam.database.windows.net.
          server-name: sql-datastore-cndn6-azure.database.windows.net
          # The connection string, including authentication information, for the Azure SQL Server database.
          connection-string: '${{ secrets.AZURE_SQL_CONNECTION_STRING }}'
          # Path to DACPAC file to deploy
          dacpac-package: ${{ github.workspace }}/source/database/BooksDataStore/bin/Release/BooksDataStore.dacpac
          # Path to SQL script file to deploy
          # sql-file: # optional
          # In case DACPAC option is selected, additional SqlPackage.exe arguments that will be applied. When SQL query option is selected, additional sqlcmd.exe arguments will be applied.
          arguments: '/p:IncludeCompositeObjects=true'